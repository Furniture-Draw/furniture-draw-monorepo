name: CI

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  actions: read
  contents: read

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Nx Cloud için (dağıtımlı görevler) erken başlatma – ihtiyacınız varsa açabilirsiniz
      # - run: npx nx-cloud start-ci-run --distribute-on="3 linux-medium-js" --stop-agents-after="build"

      # Node kurulumu ve yarn cache’i ayarlıyoruz
      - uses: actions/setup-node@v4
        with:
          node-version: 20.9.0
          cache: 'yarn'

      - name: Install Dependencies
        run: yarn install

      - uses: nrwl/nx-set-shas@v4

      # Next.js build cache’ini saklamak için cache adımı ekliyoruz
      - name: Cache Next.js Build Cache
        uses: actions/cache@v3
        with:
          # Eğer monorepo kullanıyorsanız, cache yolunu ilgili projeye göre ayarlayın (örn: apps/web/.next/cache)
          path: .next/cache
          key: ${{ runner.os }}-next-cache-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-next-cache-

      # Nx affected komutu ile değişikliklerden etkilenen görevleri çalıştırıyoruz
      - run: npx nx affected -t lint test build
